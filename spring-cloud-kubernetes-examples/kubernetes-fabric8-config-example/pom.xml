<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-kubernetes-examples</artifactId>
		<version>3.1.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>kubernetes-fabric8-config-example</artifactId>

	<name>Spring Cloud Kubernetes :: Examples :: fabric8-config</name>
	<description>fabric8 config demonstration with Spring Integration and ConfigMap
	</description>

	<properties>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<docker.maven.plugin.version>0.40.2</docker.maven.plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<type>pom</type>
				<scope>import</scope>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-kubernetes-fabric8-config</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-kubernetes-fabric8-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.22</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.springframework.cloud</groupId>-->
<!--			<artifactId>spring-cloud-kubernetes-fabric8-client-configmap-polling-reload</artifactId>-->
<!--			<version>3.1.0-SNAPSHOT</version>-->
<!--			<scope>compile</scope>-->
<!--		</dependency>-->
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<executions>
					<!--如果想在项目打包时构建镜像添加-->
					<execution>
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- Docker 远程管理地址-->
<!--					<dockerHost>${docker.host}</dockerHost>-->
<!--					<images>-->
<!--						<image>-->
<!--							&lt;!&ndash;定义镜像名称&ndash;&gt;-->
<!--							<name>org/${project.artifactId}:${project.version}</name>-->
<!--							&lt;!&ndash;定义镜像构建行为&ndash;&gt;-->
<!--							<build>-->
<!--								&lt;!&ndash;定义基础镜像&ndash;&gt;-->
<!--								<from>mdsol/java17-jdk</from>-->
<!--								<args>-->
<!--									<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>-->
<!--								</args>-->
<!--								&lt;!&ndash;定义哪些文件拷贝到容器中&ndash;&gt;-->
<!--								<assembly>-->
<!--									&lt;!&ndash;定义拷贝到容器的目录&ndash;&gt;-->
<!--									<targetDir>/</targetDir>-->
<!--									&lt;!&ndash;只拷贝生成的jar包&ndash;&gt;-->
<!--									<descriptorRef>artifact</descriptorRef>-->
<!--								</assembly>-->
<!--								&lt;!&ndash;定义容器启动命令&ndash;&gt;-->
<!--								<entryPoint>["java", "-jar","-Dspring.profiles.active=production -Dspring.config.location=/config/application.yml","/${project.build.finalName}.jar"]</entryPoint>-->
<!--								&lt;!&ndash;定义维护者&ndash;&gt;-->
<!--								<maintainer>claire</maintainer>-->
<!--							</build>-->
<!--						</image>-->
<!--					</images>-->
					<images>
						<!-- 单个镜像配置 -->
						<image>
							<!--镜像名(含版本号)-->
							<name>org/${project.artifactId}:${project.version}</name>

							<!--registry地址,用于推送,拉取镜像-->
							<!--镜像build相关配置-->
							<build>
								<!--使用dockerFile文件-->
								<dockerFile>${project.basedir}/Dockerfile</dockerFile>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
		</plugins>
	</build>

</project>
